/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: RF24.i

package RF24

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
extern void _wrap_Swig_free_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_RF24_25da4ded0286b3c1(swig_intgo arg1);
extern uintptr_t _wrap_new_StringVector__SWIG_0_RF24_25da4ded0286b3c1(void);
extern uintptr_t _wrap_new_StringVector__SWIG_1_RF24_25da4ded0286b3c1(swig_type_1 arg1);
extern swig_type_2 _wrap_StringVector_size_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern swig_type_3 _wrap_StringVector_capacity_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_StringVector_reserve_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_StringVector_isEmpty_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_StringVector_clear_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_StringVector_add_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_StringVector_get_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_StringVector_set_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2, swig_type_7 arg3);
extern void _wrap_delete_StringVector_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_0_RF24_25da4ded0286b3c1(void);
extern uintptr_t _wrap_new_ByteVector__SWIG_1_RF24_25da4ded0286b3c1(swig_type_8 arg1);
extern swig_type_9 _wrap_ByteVector_size_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern swig_type_10 _wrap_ByteVector_capacity_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_ByteVector_reserve_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_type_11 arg2);
extern _Bool _wrap_ByteVector_isEmpty_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_ByteVector_clear_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_ByteVector_add_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern char _wrap_ByteVector_get_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ByteVector_set_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_ByteVector_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern swig_intgo _wrap_RF24_PA_MIN_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_PA_LOW_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_PA_HIGH_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_PA_MAX_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_PA_ERROR_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_1MBPS_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_2MBPS_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_250KBPS_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_CRC_DISABLED_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_CRC_8_RF24_25da4ded0286b3c1(void);
extern swig_intgo _wrap_RF24_CRC_16_RF24_25da4ded0286b3c1(void);
extern uintptr_t _wrap_new_RF24__SWIG_0_RF24_25da4ded0286b3c1(short arg1, short arg2);
extern uintptr_t _wrap_new_RF24__SWIG_1_RF24_25da4ded0286b3c1(short arg1, short arg2, swig_intgo arg3);
extern _Bool _wrap_RF24_begin_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_isChipConnected_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_startListening_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_stopListening_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_available__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_read_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3);
extern _Bool _wrap_RF24_write__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3);
extern void _wrap_RF24_openWritingPipe__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_voidp arg2);
extern void _wrap_RF24_openReadingPipe__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2, swig_voidp arg3);
extern void _wrap_RF24_printDetails_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_available__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_voidp arg2);
extern _Bool _wrap_RF24_rxFifoFull_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_powerDown_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_powerUp_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_write__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, _Bool arg4);
extern _Bool _wrap_RF24_writeFast__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3);
extern _Bool _wrap_RF24_writeFast__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, _Bool arg4);
extern _Bool _wrap_RF24_writeBlocking_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, swig_intgo arg4);
extern _Bool _wrap_RF24_txStandBy__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_txStandBy__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2, _Bool arg3);
extern _Bool _wrap_RF24_txStandBy__SWIG_2_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RF24_writeAckPayload_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2, uintptr_t arg3, char arg4);
extern _Bool _wrap_RF24_isAckPayloadAvailable_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_whatHappened_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_RF24_startFastWrite__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, _Bool arg4, _Bool arg5);
extern void _wrap_RF24_startFastWrite__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, _Bool arg4);
extern void _wrap_RF24_startWrite_RF24_25da4ded0286b3c1(uintptr_t arg1, uintptr_t arg2, char arg3, _Bool arg4);
extern void _wrap_RF24_reUseTX_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern char _wrap_RF24_flush_tx_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_testCarrier_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_testRPD_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_isValid_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_closeReadingPipe_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern void _wrap_RF24_failureDetected_set_RF24_25da4ded0286b3c1(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RF24_failureDetected_get_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_setAddressWidth_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern void _wrap_RF24_setRetries_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2, char arg3);
extern void _wrap_RF24_setChannel_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern char _wrap_RF24_getChannel_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_setPayloadSize_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern char _wrap_RF24_getPayloadSize_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern char _wrap_RF24_getDynamicPayloadSize_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_enableAckPayload_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_enableDynamicPayloads_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_disableDynamicPayloads_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_enableDynamicAck_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_isPVariant_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_setAutoAck__SWIG_0_RF24_25da4ded0286b3c1(uintptr_t arg1, _Bool arg2);
extern void _wrap_RF24_setAutoAck__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2, _Bool arg3);
extern void _wrap_RF24_setPALevel_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2);
extern char _wrap_RF24_getPALevel_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern _Bool _wrap_RF24_setDataRate_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RF24_getDataRate_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_setCRCLength_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RF24_getCRCLength_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_disableCRC_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_maskIRQ_RF24_25da4ded0286b3c1(uintptr_t arg1, _Bool arg2, _Bool arg3, _Bool arg4);
extern void _wrap_RF24_txDelay_set_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RF24_txDelay_get_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_csDelay_set_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RF24_csDelay_get_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_RF24_openReadingPipe__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, char arg2, swig_type_12 arg3);
extern void _wrap_RF24_openWritingPipe__SWIG_1_RF24_25da4ded0286b3c1(uintptr_t arg1, swig_type_13 arg2);
extern char _wrap_RF24_flush_rx_RF24_25da4ded0286b3c1(uintptr_t arg1);
extern void _wrap_delete_RF24_RF24_25da4ded0286b3c1(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_RF24_25da4ded0286b3c1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

func NewStringVector__SWIG_0() (_swig_ret StringVector) {
	var swig_r StringVector
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_0_RF24_25da4ded0286b3c1()))
	return swig_r
}

func NewStringVector__SWIG_1(arg1 int64) (_swig_ret StringVector) {
	var swig_r StringVector
	_swig_i_0 := arg1
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_1_RF24_25da4ded0286b3c1(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		return NewStringVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStringVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_size_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_capacity_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_reserve_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrStringVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_StringVector_isEmpty_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_StringVector_clear_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_add_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStringVector) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StringVector_get_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_StringVector_set_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteStringVector(arg1 StringVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StringVector_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func NewByteVector__SWIG_0() (_swig_ret ByteVector) {
	var swig_r ByteVector
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_0_RF24_25da4ded0286b3c1()))
	return swig_r
}

func NewByteVector__SWIG_1(arg1 int64) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_1_RF24_25da4ded0286b3c1(C.swig_type_8(_swig_i_0))))
	return swig_r
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		return NewByteVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrByteVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_size_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_capacity_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_reserve_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_type_11(_swig_i_1))
}

func (arg1 SwigcptrByteVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ByteVector_isEmpty_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_ByteVector_clear_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_add_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrByteVector) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_ByteVector_get_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ByteVector_set_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteByteVector(arg1 ByteVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ByteVector_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type Rf24_pa_dbm_e int
func _swig_getRF24_PA_MIN() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_PA_MIN_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_PA_MIN int = _swig_getRF24_PA_MIN()
func _swig_getRF24_PA_LOW() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_PA_LOW_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_PA_LOW int = _swig_getRF24_PA_LOW()
func _swig_getRF24_PA_HIGH() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_PA_HIGH_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_PA_HIGH int = _swig_getRF24_PA_HIGH()
func _swig_getRF24_PA_MAX() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_PA_MAX_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_PA_MAX int = _swig_getRF24_PA_MAX()
func _swig_getRF24_PA_ERROR() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_PA_ERROR_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_PA_ERROR int = _swig_getRF24_PA_ERROR()
type Rf24_datarate_e int
func _swig_getRF24_1MBPS() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_1MBPS_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_1MBPS int = _swig_getRF24_1MBPS()
func _swig_getRF24_2MBPS() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_2MBPS_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_2MBPS int = _swig_getRF24_2MBPS()
func _swig_getRF24_250KBPS() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_250KBPS_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_250KBPS int = _swig_getRF24_250KBPS()
type Rf24_crclength_e int
func _swig_getRF24_CRC_DISABLED() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_CRC_DISABLED_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_CRC_DISABLED int = _swig_getRF24_CRC_DISABLED()
func _swig_getRF24_CRC_8() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_CRC_8_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_CRC_8 int = _swig_getRF24_CRC_8()
func _swig_getRF24_CRC_16() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RF24_CRC_16_RF24_25da4ded0286b3c1())
	return swig_r
}

var RF24_CRC_16 int = _swig_getRF24_CRC_16()
type SwigcptrRF24 uintptr

func (p SwigcptrRF24) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRF24) SwigIsRF24() {
}

func NewRF24__SWIG_0(arg1 uint16, arg2 uint16) (_swig_ret RF24) {
	var swig_r RF24
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RF24)(SwigcptrRF24(C._wrap_new_RF24__SWIG_0_RF24_25da4ded0286b3c1(C.short(_swig_i_0), C.short(_swig_i_1))))
	return swig_r
}

func NewRF24__SWIG_1(arg1 uint16, arg2 uint16, arg3 uint) (_swig_ret RF24) {
	var swig_r RF24
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (RF24)(SwigcptrRF24(C._wrap_new_RF24__SWIG_1_RF24_25da4ded0286b3c1(C.short(_swig_i_0), C.short(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func NewRF24(a ...interface{}) RF24 {
	argc := len(a)
	if argc == 2 {
		return NewRF24__SWIG_0(a[0].(uint16), a[1].(uint16))
	}
	if argc == 3 {
		return NewRF24__SWIG_1(a[0].(uint16), a[1].(uint16), a[2].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) Begin() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_begin_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) IsChipConnected() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_isChipConnected_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) StartListening() {
	_swig_i_0 := arg1
	C._wrap_RF24_startListening_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) StopListening() {
	_swig_i_0 := arg1
	C._wrap_RF24_stopListening_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) Available__SWIG_0() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_available__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) Read(arg2 uintptr, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RF24_read_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2))
}

func (arg1 SwigcptrRF24) Write__SWIG_0(arg2 uintptr, arg3 byte) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RF24_write__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRF24) OpenWritingPipe__SWIG_0(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_openWritingPipe__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrRF24) OpenReadingPipe__SWIG_0(arg2 byte, arg3 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RF24_openReadingPipe__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (arg1 SwigcptrRF24) PrintDetails() {
	_swig_i_0 := arg1
	C._wrap_RF24_printDetails_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) Available__SWIG_1(arg2 *byte) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RF24_available__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRF24) Available(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.Available__SWIG_0()
	}
	if argc == 1 {
		return p.Available__SWIG_1(a[0].(*byte))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) RxFifoFull() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_rxFifoFull_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) PowerDown() {
	_swig_i_0 := arg1
	C._wrap_RF24_powerDown_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) PowerUp() {
	_swig_i_0 := arg1
	C._wrap_RF24_powerUp_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) Write__SWIG_1(arg2 uintptr, arg3 byte, arg4 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_RF24_write__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C._Bool(_swig_i_3)))
	return swig_r
}

func (p SwigcptrRF24) Write(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.Write__SWIG_0(a[0].(uintptr), a[1].(byte))
	}
	if argc == 3 {
		return p.Write__SWIG_1(a[0].(uintptr), a[1].(byte), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) WriteFast__SWIG_0(arg2 uintptr, arg3 byte) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RF24_writeFast__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRF24) WriteFast__SWIG_1(arg2 uintptr, arg3 byte, arg4 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_RF24_writeFast__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C._Bool(_swig_i_3)))
	return swig_r
}

func (p SwigcptrRF24) WriteFast(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.WriteFast__SWIG_0(a[0].(uintptr), a[1].(byte))
	}
	if argc == 3 {
		return p.WriteFast__SWIG_1(a[0].(uintptr), a[1].(byte), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) WriteBlocking(arg2 uintptr, arg3 byte, arg4 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_RF24_writeBlocking_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrRF24) TxStandBy__SWIG_0() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_txStandBy__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) TxStandBy__SWIG_1(arg2 uint, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RF24_txStandBy__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrRF24) TxStandBy__SWIG_2(arg2 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RF24_txStandBy__SWIG_2_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (p SwigcptrRF24) TxStandBy(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.TxStandBy__SWIG_0()
	}
	if argc == 1 {
		return p.TxStandBy__SWIG_2(a[0].(uint))
	}
	if argc == 2 {
		return p.TxStandBy__SWIG_1(a[0].(uint), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) WriteAckPayload(arg2 byte, arg3 uintptr, arg4 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RF24_writeAckPayload_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C.uintptr_t(_swig_i_2), C.char(_swig_i_3))
}

func (arg1 SwigcptrRF24) IsAckPayloadAvailable() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_isAckPayloadAvailable_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) WhatHappened(arg2 *bool, arg3 *bool, arg4 *bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RF24_whatHappened_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
}

func (arg1 SwigcptrRF24) StartFastWrite__SWIG_0(arg2 uintptr, arg3 byte, arg4 bool, arg5 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_RF24_startFastWrite__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C._Bool(_swig_i_3), C._Bool(_swig_i_4))
}

func (arg1 SwigcptrRF24) StartFastWrite__SWIG_1(arg2 uintptr, arg3 byte, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RF24_startFastWrite__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C._Bool(_swig_i_3))
}

func (p SwigcptrRF24) StartFastWrite(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.StartFastWrite__SWIG_1(a[0].(uintptr), a[1].(byte), a[2].(bool))
		return
	}
	if argc == 4 {
		p.StartFastWrite__SWIG_0(a[0].(uintptr), a[1].(byte), a[2].(bool), a[3].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) StartWrite(arg2 uintptr, arg3 byte, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RF24_startWrite_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.char(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrRF24) ReUseTX() {
	_swig_i_0 := arg1
	C._wrap_RF24_reUseTX_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) Flush_tx() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_flush_tx_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) TestCarrier() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_testCarrier_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) TestRPD() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_testRPD_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) IsValid() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_isValid_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) CloseReadingPipe(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_closeReadingPipe_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRF24) SetFailureDetected(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_failureDetected_set_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetFailureDetected() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_failureDetected_get_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetAddressWidth(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setAddressWidth_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRF24) SetRetries(arg2 byte, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RF24_setRetries_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C.char(_swig_i_2))
}

func (arg1 SwigcptrRF24) SetChannel(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setChannel_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetChannel() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_getChannel_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetPayloadSize(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setPayloadSize_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetPayloadSize() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_getPayloadSize_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) GetDynamicPayloadSize() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_getDynamicPayloadSize_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) EnableAckPayload() {
	_swig_i_0 := arg1
	C._wrap_RF24_enableAckPayload_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) EnableDynamicPayloads() {
	_swig_i_0 := arg1
	C._wrap_RF24_enableDynamicPayloads_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) DisableDynamicPayloads() {
	_swig_i_0 := arg1
	C._wrap_RF24_disableDynamicPayloads_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) EnableDynamicAck() {
	_swig_i_0 := arg1
	C._wrap_RF24_enableDynamicAck_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) IsPVariant() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RF24_isPVariant_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetAutoAck__SWIG_0(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setAutoAck__SWIG_0_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRF24) SetAutoAck__SWIG_1(arg2 byte, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RF24_setAutoAck__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C._Bool(_swig_i_2))
}

func (p SwigcptrRF24) SetAutoAck(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetAutoAck__SWIG_0(a[0].(bool))
		return
	}
	if argc == 2 {
		p.SetAutoAck__SWIG_1(a[0].(byte), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) SetPALevel(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setPALevel_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetPALevel() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_getPALevel_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetDataRate(arg2 Rf24_datarate_e) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RF24_setDataRate_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRF24) GetDataRate() (_swig_ret Rf24_datarate_e) {
	var swig_r Rf24_datarate_e
	_swig_i_0 := arg1
	swig_r = (Rf24_datarate_e)(C._wrap_RF24_getDataRate_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetCRCLength(arg2 Rf24_crclength_e) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_setCRCLength_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetCRCLength() (_swig_ret Rf24_crclength_e) {
	var swig_r Rf24_crclength_e
	_swig_i_0 := arg1
	swig_r = (Rf24_crclength_e)(C._wrap_RF24_getCRCLength_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) DisableCRC() {
	_swig_i_0 := arg1
	C._wrap_RF24_disableCRC_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRF24) MaskIRQ(arg2 bool, arg3 bool, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RF24_maskIRQ_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrRF24) SetTxDelay(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_txDelay_set_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetTxDelay() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RF24_txDelay_get_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) SetCsDelay(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_csDelay_set_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRF24) GetCsDelay() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RF24_csDelay_get_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRF24) OpenReadingPipe__SWIG_1(arg2 byte, arg3 uint64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RF24_openReadingPipe__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.char(_swig_i_1), C.swig_type_12(_swig_i_2))
}

func (p SwigcptrRF24) OpenReadingPipe(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(uint64); !ok {
			goto check_1
		}
		p.OpenReadingPipe__SWIG_1(a[0].(byte), a[1].(uint64))
		return
	}
check_1:
	if argc == 2 {
		p.OpenReadingPipe__SWIG_0(a[0].(byte), a[1].(*byte))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) OpenWritingPipe__SWIG_1(arg2 uint64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RF24_openWritingPipe__SWIG_1_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0), C.swig_type_13(_swig_i_1))
}

func (p SwigcptrRF24) OpenWritingPipe(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(uint64); !ok {
			goto check_1
		}
		p.OpenWritingPipe__SWIG_1(a[0].(uint64))
		return
	}
check_1:
	if argc == 1 {
		p.OpenWritingPipe__SWIG_0(a[0].(*byte))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRF24) Flush_rx() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RF24_flush_rx_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteRF24(arg1 RF24) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RF24_RF24_25da4ded0286b3c1(C.uintptr_t(_swig_i_0))
}

type RF24 interface {
	Swigcptr() uintptr
	SwigIsRF24()
	Begin() (_swig_ret bool)
	IsChipConnected() (_swig_ret bool)
	StartListening()
	StopListening()
	Read(arg2 uintptr, arg3 byte)
	PrintDetails()
	Available(a ...interface{}) bool
	RxFifoFull() (_swig_ret bool)
	PowerDown()
	PowerUp()
	Write(a ...interface{}) bool
	WriteFast(a ...interface{}) bool
	WriteBlocking(arg2 uintptr, arg3 byte, arg4 uint) (_swig_ret bool)
	TxStandBy(a ...interface{}) bool
	WriteAckPayload(arg2 byte, arg3 uintptr, arg4 byte)
	IsAckPayloadAvailable() (_swig_ret bool)
	WhatHappened(arg2 *bool, arg3 *bool, arg4 *bool)
	StartFastWrite(a ...interface{})
	StartWrite(arg2 uintptr, arg3 byte, arg4 bool)
	ReUseTX()
	Flush_tx() (_swig_ret byte)
	TestCarrier() (_swig_ret bool)
	TestRPD() (_swig_ret bool)
	IsValid() (_swig_ret bool)
	CloseReadingPipe(arg2 byte)
	SetFailureDetected(arg2 bool)
	GetFailureDetected() (_swig_ret bool)
	SetAddressWidth(arg2 byte)
	SetRetries(arg2 byte, arg3 byte)
	SetChannel(arg2 byte)
	GetChannel() (_swig_ret byte)
	SetPayloadSize(arg2 byte)
	GetPayloadSize() (_swig_ret byte)
	GetDynamicPayloadSize() (_swig_ret byte)
	EnableAckPayload()
	EnableDynamicPayloads()
	DisableDynamicPayloads()
	EnableDynamicAck()
	IsPVariant() (_swig_ret bool)
	SetAutoAck(a ...interface{})
	SetPALevel(arg2 byte)
	GetPALevel() (_swig_ret byte)
	SetDataRate(arg2 Rf24_datarate_e) (_swig_ret bool)
	GetDataRate() (_swig_ret Rf24_datarate_e)
	SetCRCLength(arg2 Rf24_crclength_e)
	GetCRCLength() (_swig_ret Rf24_crclength_e)
	DisableCRC()
	MaskIRQ(arg2 bool, arg3 bool, arg4 bool)
	SetTxDelay(arg2 uint)
	GetTxDelay() (_swig_ret uint)
	SetCsDelay(arg2 uint)
	GetCsDelay() (_swig_ret uint)
	OpenReadingPipe(a ...interface{})
	OpenWritingPipe(a ...interface{})
	Flush_rx() (_swig_ret byte)
}

const NRF_CONFIG int = 0x00
const EN_AA int = 0x01
const EN_RXADDR int = 0x02
const SETUP_AW int = 0x03
const SETUP_RETR int = 0x04
const RF_CH int = 0x05
const RF_SETUP int = 0x06
const NRF_STATUS int = 0x07
const OBSERVE_TX int = 0x08
const CD int = 0x09
const RX_ADDR_P0 int = 0x0A
const RX_ADDR_P1 int = 0x0B
const RX_ADDR_P2 int = 0x0C
const RX_ADDR_P3 int = 0x0D
const RX_ADDR_P4 int = 0x0E
const RX_ADDR_P5 int = 0x0F
const TX_ADDR int = 0x10
const RX_PW_P0 int = 0x11
const RX_PW_P1 int = 0x12
const RX_PW_P2 int = 0x13
const RX_PW_P3 int = 0x14
const RX_PW_P4 int = 0x15
const RX_PW_P5 int = 0x16
const FIFO_STATUS int = 0x17
const DYNPD int = 0x1C
const FEATURE int = 0x1D
const MASK_RX_DR int = 6
const MASK_TX_DS int = 5
const MASK_MAX_RT int = 4
const EN_CRC int = 3
const CRCO int = 2
const PWR_UP int = 1
const PRIM_RX int = 0
const ENAA_P5 int = 5
const ENAA_P4 int = 4
const ENAA_P3 int = 3
const ENAA_P2 int = 2
const ENAA_P1 int = 1
const ENAA_P0 int = 0
const ERX_P5 int = 5
const ERX_P4 int = 4
const ERX_P3 int = 3
const ERX_P2 int = 2
const ERX_P1 int = 1
const ERX_P0 int = 0
const AW int = 0
const ARD int = 4
const ARC int = 0
const PLL_LOCK int = 4
const RF_DR int = 3
const RF_PWR int = 6
const RX_DR int = 6
const TX_DS int = 5
const MAX_RT int = 4
const RX_P_NO int = 1
const TX_FULL int = 0
const PLOS_CNT int = 4
const ARC_CNT int = 0
const TX_REUSE int = 6
const FIFO_FULL int = 5
const TX_EMPTY int = 4
const RX_FULL int = 1
const RX_EMPTY int = 0
const DPL_P5 int = 5
const DPL_P4 int = 4
const DPL_P3 int = 3
const DPL_P2 int = 2
const DPL_P1 int = 1
const DPL_P0 int = 0
const EN_DPL int = 2
const EN_ACK_PAY int = 1
const EN_DYN_ACK int = 0
const R_REGISTER int = 0x00
const W_REGISTER int = 0x20
const REGISTER_MASK int = 0x1F
const ACTIVATE int = 0x50
const R_RX_PL_WID int = 0x60
const R_RX_PAYLOAD int = 0x61
const W_TX_PAYLOAD int = 0xA0
const W_ACK_PAYLOAD int = 0xA8
const FLUSH_TX int = 0xE1
const FLUSH_RX int = 0xE2
const REUSE_TX_PL int = 0xE3
const RF24_NOP int = 0xFF
const LNA_HCURR int = 0
const RPD int = 0x09
const W_TX_PAYLOAD_NO_ACK int = 0xB0
const RF_DR_LOW int = 5
const RF_DR_HIGH int = 3
const RF_PWR_LOW int = 1
const RF_PWR_HIGH int = 2

