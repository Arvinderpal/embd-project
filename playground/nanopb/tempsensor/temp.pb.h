/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Sun Oct  7 11:41:22 2018. */

#ifndef PB_PB_TEMP_PB_H_INCLUDED
#define PB_PB_TEMP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _pb_TempEvent {
    int32_t deviceId;
    int32_t eventId;
    float humidity;
    float tempCel;
    float heatIdxCel;
/* @@protoc_insertion_point(struct:pb_TempEvent) */
} pb_TempEvent;

/* Default values for struct fields */

/* Initializer values for message structs */
#define pb_TempEvent_init_default                {0, 0, 0, 0, 0}
#define pb_TempEvent_init_zero                   {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_TempEvent_deviceId_tag                1
#define pb_TempEvent_eventId_tag                 2
#define pb_TempEvent_humidity_tag                3
#define pb_TempEvent_tempCel_tag                 4
#define pb_TempEvent_heatIdxCel_tag              5

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_TempEvent_fields[6];

/* Maximum encoded size of messages (where known) */
#define pb_TempEvent_size                        37

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEMP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
